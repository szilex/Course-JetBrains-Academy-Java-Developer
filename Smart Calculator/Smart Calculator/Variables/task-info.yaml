type: edu
custom_name: stage6
files:
- name: test/Test.java
  visible: true
  text: |
    import calculator.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.SimpleTestCase;

    import java.util.List;

    public class Test extends StageTest {

        public Test() {
            super(Main.class);
        }

        @Override
        public List<SimpleTestCase> generate() {
            return List.of(
                    /* Check simple additions and subtractions */
                    new SimpleTestCase(
                            "4 + 6 - 8\n\n\n2 - 3 - 4\n\n8 + 7 - 4\n/exit",
                            "2\n-5\n11\nBye!"
                    ),
                    /* Check handling unknown commands */
                    new SimpleTestCase(
                            "/command\n/exit",
                            "Unknown command\nBye!"
                    ),
                    /* Check different assignments */
                    new SimpleTestCase(
                            "n = 3\nm=4\na =   5\nb = a\nn\nm\na\nb\ncount = 10\ncount\n/exit",
                            "3\n4\n5\n5\n10\nBye!"
                    ),
                    /* Check expressions with variables */
                    new SimpleTestCase(
                            "a = 3\nb = 4\nc = 5\na + b - c\nb - c + 4 - a\na = 800\na + b + c\n/exit",
                            "2\n0\n809\nBye!"
                    ),
                    /* Check reassignment */
                    new SimpleTestCase(
                            "a = 1\na = 2\na = 3\na\n/exit",
                            "3\nBye!"
                    ),
                    /* Check handling unknown variables */
                    new SimpleTestCase(
                            "q\nr\nq = 10\nr = 20\nq\nr\nR\n/exit",
                            "Unknown variable\n" +
                                    "Unknown variable\n" +
                                    "10\n20\n" +
                                    "Unknown variable\n" +
                                    "Bye!"
                    ),
                    /* Check handling incorrect assignments */
                    new SimpleTestCase(
                            "a1 = 8\nn = a2a\na = 7 = 8\nnum = 10\n/exit",
                            "Invalid identifier\n" +
                                    "Invalid assignment\n" +
                                    "Invalid assignment\n" +
                                    "Bye!"
                    )
            );
        }
    }
  learner_created: false
- name: src/calculator/Main.java
  visible: true
  text: |
    package calculator;

    import java.util.Arrays;
    import java.util.List;
    import java.util.Scanner;
    import java.util.regex.Matcher;
    import java.util.regex.Pattern;
    import java.util.stream.Collectors;

    public class Main {

        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
            boolean repeatLoop = true;
            while (scanner.hasNext() && repeatLoop) {
                String line = scanner.nextLine();
                line = editInput(line);
                switch (line) {
                    case "/help" :
                        System.out.println("The program calculates the sum of numbers");
                        break;
                    case "/exit" :
                        repeatLoop = false;
                        break;
                    default:
                        Pattern pattern = Pattern.compile("/.*");
                        Matcher unknownCommandMatcher = pattern.matcher(line);
                        if (unknownCommandMatcher.matches()) {
                            System.out.println("Unknown command");
                        } else if (!line.isEmpty()) {
                                try {
                                    int result = calculateResult(line);
                                    System.out.println(result);
                                } catch (NumberFormatException e) {
                                    System.out.println("Invalid expression");
                                }
                        }
                        break;
                }
            }
            System.out.println("Bye!");
        }

        public static String editInput(String input) {
            Pattern separatorPattern = Pattern.compile("\\s+");
            Pattern plusPattern = Pattern.compile("[+]+");
            Pattern evenMinusPattern = Pattern.compile("(--)+");
            Pattern oddMinusPattern = Pattern.compile("-(--)+");

            Matcher separatorMatcher = separatorPattern.matcher(input);
            input = separatorMatcher.replaceAll(" ");

            Matcher plusMatcher = plusPattern.matcher(input);
            input = plusMatcher.replaceAll("+");

            Matcher oddMinusMatcher = oddMinusPattern.matcher(input);
            input = oddMinusMatcher.replaceAll("-");

            Matcher evenMinusMatcher = evenMinusPattern.matcher(input);
            input = evenMinusMatcher.replaceAll("+");

            return input;
        }

        public static int calculateResult(String input) throws NumberFormatException{

            int sum = 0;
            List<String> stringValues = Arrays.asList(input.split(" "));

            if ((stringValues.size() + 2) % 2 == 0) {
                throw new NumberFormatException();
            }

            boolean add = true;
            for(String word : stringValues) {
                if (word.matches("\\+")) {
                    add = true;
                } else if (word.matches("-")) {
                    add = false;
                } else {
                    /*try {
                        if (add) {
                            sum += Integer.parseInt(word);
                        } else {
                            sum -= Integer.parseInt(word);
                        }
                    } catch (NumberFormatException e) {
                        System.out.println(input);
                    }*/
                    if (add) {
                        sum += Integer.parseInt(word);
                    } else {
                        sum -= Integer.parseInt(word);
                    }

                }
            }
            return sum;
        }
    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/42/stages/225/implement
status: Solved
record: 6
